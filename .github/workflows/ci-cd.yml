name: build

on:
  push:
    branches: []
  pull_request:


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: set up go 1.21
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
        id: go

      - name: checkout
        uses: actions/checkout@v4

      - name: build and test
        run: |
          go test -v -timeout=100s -covermode=count -coverprofile=$GITHUB_WORKSPACE/profile.cov_tmp ./...
          cat $GITHUB_WORKSPACE/profile.cov_tmp | grep -v "mocks" | grep -v "_mock" > $GITHUB_WORKSPACE/profile.cov
        working-directory: services

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

      - name: install goveralls
        run: |
          curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $GITHUB_WORKSPACE v1.45.0
          GO111MODULE=off go get -u -v github.com/mattn/goveralls

      - name: submit coverage
        run: $(go env GOPATH)/bin/goveralls -service="github" -coverprofile=$GITHUB_WORKSPACE/profile.cov
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          name: Set up QEMU
          uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      -
        name: Build and push load-generator
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ github.actor }}/aws-k8s-messaging-platform-load-generator:latest
          context: ./services/load-generator
      -
        name: Build and push user-service 
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ github.actor }}/aws-k8s-messaging-platform-user-service:latest
          context: ./services/user-service